# 2024-03-15 01:00
# get far2m SHA and version
# apk add --no-progress quilt --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community
name: act-build - x64, x86, armhf, armv7
run-name: Build - x64, x86, armhf, armv7

env:
   client_payload_name: 'far2m'
   client_payload_tag: '2.5.3'
   client_payload_sha: '2b8aa80'
   client_payload_repo: 'deep-soft/far2m'
   client_payload_date: '20231231'
   client_payload_url: 'deep-soft/far2m'
   client_payload_message: 'far2m portable'
   TAG_NAME:      "far2m"
   TAG_VERSION:   "far2m-v2.5.2"
   TAG_BUILD:     "-b"
   TAG_REF:       "0000000"
   PROG_NAME:     "far2m"
   PROG_VERSION:  "v2.5.2"
   VERSION:       "2.5.2"
   DRAFT:         true

on:
  workflow_dispatch:
    inputs:
      # if: ${{ inputs.PLUGINS_EXTRA }}
      PLUGINS_EXTRA: 
        description: PLUGINS_EXTRA
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.release_all }}
      release_all:
        description: Release all
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.ZIP_ALL }}
      ZIP_ALL:
        description: ZIP ALL
        type: boolean
        required: true
        default: false
      SED_STUFF:
        description: SED_STUFF
        type: boolean
        default: true
        required: true
      SED_STUFF_PARAMS:
        description: SED_STUFF_PARAMS
        default: "filename_to_cat"
        required: true
      DEBUG_MODE_1:
        description: DEBUG_MODE_1
        default: "N"
        required: true
      DEBUG_MODE_2:
        description: DEBUG_MODE_2
        default: "N"
        required: true

jobs:
  build-chroot:
    name: build ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          arch: [x86_64, x86, armhf, armv7]
          os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: deep-soft/checkout@v4

      - name: patch build_far2m.sh for run-after-cmake-before-package.sh
        shell: bash
        run: |
          sed -ibak '/find \$REPO_DIR -type d -path \"\*\/AppDir\"/i \\n echo \"Done\" \\n bash -x ${GITHUB_WORKSPACE}/run-after-cmake-before-package.sh' ${GITHUB_WORKSPACE}/build_far2m.sh;
          cat ${GITHUB_WORKSPACE}/build_far2m.sh;

      - name: patch build_far2m.sh for PLUGINS_EXTRA
        if: ${{ inputs.PLUGINS_EXTRA }}
        shell: bash
        run: |
          sed -ibak "s!( cd \$plug!( mv far2m-\$plug \$plug \&\& \\n       cd \$plug!" ${GITHUB_WORKSPACE}/build_far2m.sh;
          #cat ${GITHUB_WORKSPACE}/build_far2m.sh;
          if [ ${{ inputs.PLUGINS_EXTRA }} ]; then
            echo "PLUGINS_EXTRA=true" >> $GITHUB_ENV;
          fi

      - name: Checkout far2m
        id: id_check_far2m
        uses: deep-soft/checkout@v4
        with:
          repository: ${{ env.client_payload_repo }}
          path: far2m

      - name: Checkout far2m get SHA and version
        shell: bash
        run: |
          pushd far2m
          _far2m_sha_=$(git log -1 --format='%H')
          _date_=$(date +%Y%m%d)
          echo "client_payload_date=$_date_" >> $GITHUB_ENV

          _ref_org_=${{ env.TAG_REF }}
          _ref_len_="${#_ref_org_}"
          _far2m_sha_short_=$(echo ${_far2m_sha_::$_ref_len_})

          echo "TAG_REF=$_far2m_sha_short_" >> $GITHUB_ENV
          echo "client_payload_sha=$_far2m_sha_short_" >> $GITHUB_ENV

          _version_=$(cat packaging/version)
          echo "VERSION=$_version_" >> $GITHUB_ENV
          echo "PROG_VERSION=v$_version_" >> $GITHUB_ENV
          echo "client_payload_tag=v$_version_" >> $GITHUB_ENV

          _build_=${{ env.TAG_BUILD }}-$_date_-$_far2m_sha_short_

          echo "TAG_BUILD=$_build_" >> $GITHUB_ENV
          echo "WORK_DIR=$(pwd)" >> $GITHUB_ENV
          echo "TAG_DATE=$_date_" >> $GITHUB_ENV

      - name: Checkout and sed-stuff
        if: ${{ inputs.SED_STUFF }}
        continue-on-error: true
        shell: bash
        env:
          DEBUG_MODE_1: ${{ inputs.DEBUG_MODE_1 }}
          DEBUG_MODE_2: ${{ inputs.DEBUG_MODE_2 }}
        run: |
          pushd far2m
          bash bins/sed-stuff.sh "_" "${{ inputs.SED_STUFF_PARAMS }}"
          popd

      - name: Checkout and patch far2m
        continue-on-error: true
        shell: bash
        run: |
          pushd far2m
          if [ -f netcfg/src/common/netlink.h ]; then
            # patch if_tunnel.h, add ip.h before
            echo 'patch if_tunnel.h, add ip.h before'
            sed -ibak 's!#include <linux/if_tunnel.h>!#include <linux/ip.h>\n#include <linux/if_tunnel.h>!' netcfg/src/common/netlink.h
            echo 'grep /i.*.h netcfg/src/common/netlink.h'
            grep '/i.*.h' netcfg/src/common/netlink.h
          fi
          popd
          
      - name: Setup ccache
        uses: deep-soft/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          key: ccache-${{ matrix.arch }}-${{ env.client_payload_sha }}
          restore-keys: |
            ccache-${{ matrix.arch }}-

      - name: Setup Alpine Linux for ${{ matrix.arch }}
        uses: deep-soft/setup-alpine@v1
        #with: branch: v3.16 or latest-stable
        #with: branch: v3.18
        with:
          branch: v3.19
          arch: ${{ matrix.arch }}
          packages: >
            git bash build-base ccache cmake coreutils findutils gawk grep libarchive-dev libnfs-dev libssh-dev
            libtree libxi-dev linux-headers neon-dev ninja-is-really-ninja patchelf pcre-dev perl samba-dev tar
            uchardet-dev wget libxml2-dev xz 
            m4 luajit-dev py3-cffi libuuid ossp-uuid-dev elfutils-dev
          shell-name: alpine.sh

      - name: Add extra build-deps to chroot
          #apk add --no-progress makeself --repository=https://dl-cdn.alpinelinux.org/alpine/edge/testing
          #apk add --no-progress quilt --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community
        shell: alpine.sh --root {0}
        run: |
          #apk add --no-progress makeself --repository=https://dl-cdn.alpinelinux.org/alpine/edge/testing
          #apk add --no-progress quilt --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community
          apk add makeself --repository=https://dl-cdn.alpinelinux.org/alpine/edge/testing
          apk add quilt --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community
          apk add --no-cache --update --repository=https://dl-cdn.alpinelinux.org/alpine/v3.16/main/ libexecinfo-dev

      - name: Build far2m inside chroot
        working-directory: ./far2m
        env:
          DATE: ${{ env.client_payload_date }}
          SHA:  ${{ env.client_payload_sha }}
          TAG:  ${{ env.client_payload_tag }}
          ARCH: ${{ matrix.arch }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          DESTDIR: ${{ github.workspace }}/AppDir
          STANDALONE: true
        shell: alpine.sh {0}
        run: |
          export VERSION=${TAG}.git${DATE}
          export PKG_NAME=far2m_${VERSION}_${ARCH}
          bash -x ${GITHUB_WORKSPACE}/build_far2m.sh

      - name: Archive Release
        uses: deep-soft/zip-release@v2.1
        with:
          type: 'zip'
          filename: 'far2m-${{ matrix.arch }}'
          directory: 'far2m/build/install'
          path: '.'
          # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Upload artifact
        continue-on-error: true
        uses: deep-soft/upload-artifact@v4
        with:
          name: far2m-${{ matrix.arch }}
          path: |
            ./**/far2m*.tar*
          if-no-files-found: error

      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/action-gh-release@v2.1
        with:
          draft: ${{ env.DRAFT }}
          tag_name: ${{ env.client_payload_name }}-${{ env.client_payload_tag }}
          files: |
            ./**/far2m*.tar
            ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Archive - ZIP_ALL
        if: ${{ inputs.ZIP_ALL }}
        uses: deep-soft/zip-release@v2.1
        with:
          type: 'zip'
          filename: 'far2m-${{ matrix.arch }}-ALL'
          directory: ${{ github.workspace }}
          path: '.'
          env_variable: ZIP_ALL
          # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish - ZIP_ALL
        if: ${{ inputs.ZIP_ALL }}
        continue-on-error: true
        uses: deep-soft/action-gh-release@v2.1
        with:
          draft: ${{ env.DRAFT }}
          tag_name: ${{ env.client_payload_name }}-${{ env.client_payload_tag }}-ALL
          files: |
            ${{ env.ZIP_ALL }}

  release:
    if: ${{ inputs.release_all }}
    name: Upload release all
    needs: [build-chroot]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: deep-soft/download-artifact@v4

      - name: Store .tar files
        id: store
        uses: deep-soft/nightly-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          URL: ${{ env.client_payload_url }}
          MESSAGE: ${{ env.client_payload_message }}
        with:
          prerelease: false
          tag_name: latest
          name: ${{ env.client_payload_date }}
          body: |
            ${{ env.URL }}: ${{ env.MESSAGE }}
          files: |
            ./**/far2m_*.run.tar

      - name: Delete workflow runs
        uses: deep-soft/delete-workflow-runs@v2
        continue-on-error: true
